학번: 2024001, 이름: 김우수

문제 1: 알고리즘의 시간복잡도와 공간복잡도에 대해 설명하고, Big-O 표기법의 의미와 예시를 들어 설명하시오.

답:
시간복잡도(Time Complexity)는 알고리즘이 실행되는 데 필요한 시간의 양을 입력 크기에 따라 나타낸 것입니다. 공간복잡도(Space Complexity)는 알고리즘이 실행되는 동안 사용하는 메모리 공간의 양을 의미합니다.

Big-O 표기법은 알고리즘의 성능을 최악의 경우(worst case)를 기준으로 표현하는 점근적 표기법입니다. 입력 크기가 커질 때 알고리즘의 실행 시간이나 메모리 사용량이 어떻게 증가하는지를 나타냅니다.

주요 예시:
- O(1): 상수 시간 - 배열의 인덱스 접근
- O(log n): 로그 시간 - 이진 탐색
- O(n): 선형 시간 - 선형 탐색, 배열 순회
- O(n log n): - 효율적인 정렬 알고리즘(merge sort, quick sort)
- O(n²): 제곱 시간 - 버블 정렬, 삽입 정렬

문제 2: 자료구조 중 스택(Stack)과 큐(Queue)의 차이점을 설명하고, 각각의 실제 사용 예시를 들어보시오.

답:
스택(Stack)은 LIFO(Last In First Out) 구조로, 가장 나중에 삽입된 데이터가 가장 먼저 삭제됩니다. 주요 연산은 push(삽입)와 pop(삭제)입니다.

큐(Queue)는 FIFO(First In First Out) 구조로, 가장 먼저 삽입된 데이터가 가장 먼저 삭제됩니다. 주요 연산은 enqueue(삽입)와 dequeue(삭제)입니다.

실제 사용 예시:
스택:
- 함수 호출 스택: 재귀 함수나 함수 호출 시 복귀 주소 저장
- 웹 브라우저의 뒤로가기 기능
- 수식의 괄호 검사
- Undo 기능 구현

큐:
- 프린터 대기열: 먼저 요청된 작업부터 처리
- CPU 스케줄링: 프로세스 대기열
- BFS(너비 우선 탐색) 알고리즘
- 버퍼링 시스템

문제 3: 객체지향 프로그래밍의 4대 특징을 설명하고, 각각에 대한 간단한 예시를 제시하시오.

답:
1. 캡슐화(Encapsulation): 데이터와 그 데이터를 조작하는 메서드를 하나의 클래스로 묶고, 외부에서의 직접적인 접근을 제한하는 것입니다.
예시: 은행 계좌 클래스에서 잔액 변수를 private로 선언하고 입출금 메서드를 통해서만 접근 가능하게 함.

2. 상속(Inheritance): 기존 클래스의 속성과 메서드를 새로운 클래스가 물려받아 재사용하는 것입니다.
예시: Animal 클래스를 상속받은 Dog, Cat 클래스가 공통 속성(이름, 나이)과 메서드(eat, sleep)를 사용.

3. 다형성(Polymorphism): 같은 인터페이스나 메서드 이름으로 다른 동작을 수행할 수 있는 능력입니다.
예시: Animal의 makeSound() 메서드를 Dog에서는 "멍멍", Cat에서는 "야옹"으로 다르게 구현.

4. 추상화(Abstraction): 복잡한 내부 구현을 숨기고 필요한 기능만을 외부에 제공하는 것입니다.
예시: 자동차 클래스에서 엔진의 복잡한 동작 원리는 숨기고 start(), stop() 메서드만 제공.

문제 4: 데이터베이스의 정규화가 필요한 이유와 1차, 2차, 3차 정규화에 대해 간략히 설명하시오.

답:
데이터베이스 정규화가 필요한 이유:
- 데이터 중복(redundancy) 제거로 저장 공간 절약
- 데이터 무결성(integrity) 보장
- 갱신 이상(update anomaly), 삽입 이상(insert anomaly), 삭제 이상(delete anomaly) 방지
- 데이터 일관성 유지

1차 정규화(1NF): 
- 모든 속성 값이 원자값(atomic value)을 가져야 함
- 반복 그룹이나 다중값 속성 제거
- 예: "취미: 독서, 영화감상" → 별도 테이블로 분리

2차 정규화(2NF):
- 1NF를 만족하면서 부분 함수 종속성 제거
- 기본키가 아닌 모든 속성이 기본키에 완전 함수 종속
- 예: 복합키 (학번, 과목코드)에서 학생이름이 학번에만 종속되는 경우 분리

3차 정규화(3NF):
- 2NF를 만족하면서 이행 함수 종속성 제거
- 기본키가 아닌 속성들 간의 종속성 제거
- 예: 학번 → 학과코드 → 학과명의 이행 종속성을 제거하여 학과 정보를 별도 테이블로 분리